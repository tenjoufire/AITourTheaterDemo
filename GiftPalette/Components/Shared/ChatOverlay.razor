@using GiftPalette.Services
@inject ChatStateService ChatStateService
@implements IDisposable

<!-- Chat Panel (no overlay, just side panel) -->
<div class="chat-panel @(IsVisible ? "visible" : "")">
    <ChatComponent IsVisible="IsVisible" OnClose="HideChat" @rendermode="InteractiveServer" />
</div>

<!-- Floating Chat Button -->
<button class="floating-chat-btn @(IsVisible ? "hidden" : "")" @onclick="ShowChat">
    üí¨ „Ç®„Éº„Ç∏„Çß„É≥„Éà„Å´Áõ∏Ë´á„Åô„Çã
</button>

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback<bool> IsVisibleChanged { get; set; }

    protected override void OnInitialized()
    {
        ChatStateService.ChatVisibilityChanged += OnChatStateChanged;
        IsVisible = ChatStateService.IsChatVisible;
    }

    private async void OnChatStateChanged(bool isVisible)
    {
        if (IsVisible != isVisible)
        {
            IsVisible = isVisible;
            await IsVisibleChanged.InvokeAsync(IsVisible);
            await InvokeAsync(StateHasChanged);
        }
    }

    private void ShowChat()
    {
        ChatStateService.ShowChat();
    }

    private void HideChat()
    {
        ChatStateService.HideChat();
    }

    public void Dispose()
    {
        ChatStateService.ChatVisibilityChanged -= OnChatStateChanged;
    }
}